apiVersion: v1
kind: Service
metadata:
  name: dpg-datastore-primary
  namespace: deeppharmgraph
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 7878
  selector:
    app: oxigraph-primary
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: dpg-datastore-secondary
  namespace: deeppharmgraph
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 7878
  selector:
    app: oxigraph-secondary
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: oxigraph-ontology-pvc
  namespace: deeppharmgraph
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 8Gi
  storageClassName: filesystem-erasure
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: oxigraph-primary-pvc
  namespace: deeppharmgraph
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 32Gi
  storageClassName: filesystem-erasure
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oxigraph-primary
  name: oxigraph-primary
  namespace: deeppharmgraph
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oxigraph-primary
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: oxigraph-primary
    spec:
      containers:
      - args:
        - serve
        - --location
        - /data
        - --bind
        - 0.0.0.0:7878
        image: ghcr.io/oxigraph/oxigraph:0.4.0-alpha.3
        name: oxigraph
        ports:
        - containerPort: 7878
        volumeMounts:
        - mountPath: /data
          name: oxigraph-data
      initContainers:
      - command:
        - bash
        - -c
        - |
          # Define the remote repository URL, the local directory, and the branch name
          REMOTE_REPO_URL="https://github.com/GreenCappuccino/dpg-datastore-ontology.git"
          LOCAL_DIR="/ontology/repository"
          BRANCH_NAME="forging.cc"

          # Check if the local directory exists
          if [ -d "$LOCAL_DIR" ]; then
            # Move into the local directory
            cd "$LOCAL_DIR"

            # Check if the directory is a git repository
            if git rev-parse --git-dir > /dev/null 2>&1; then
              # Fetch all branches from the remote repository
              git fetch --all

              # Check if the specified branch exists in the remote
              if git show-ref --verify --quiet refs/remotes/origin/$BRANCH_NAME; then
                # Forcefully reset the local copy to match the specified remote branch
                echo "Branch '$BRANCH_NAME' found. Forcefully pulling changes..."
                git checkout $BRANCH_NAME
                git reset --hard origin/$BRANCH_NAME
              else
                echo "Branch '$BRANCH_NAME' not found in the remote repository."
                exit 1
              fi
            else
              echo "Directory is not a git repository. Removing it and attempting to clone..."
              cd ..
              rm -rf "$LOCAL_DIR"
              git clone --branch $BRANCH_NAME --single-branch --depth 1 "$REMOTE_REPO_URL" "$LOCAL_DIR"
            fi
          else
            # Perform a shallow clone with the specified branch
            echo "Local directory does not exist. Attempting to clone repository..."
            git clone --branch $BRANCH_NAME --single-branch --depth 1 "$REMOTE_REPO_URL" "$LOCAL_DIR"
          fi
        image: docker.io/bitnami/git
        name: git-ontology
        volumeMounts:
        - mountPath: /ontology
          name: oxigraph-ontology
      - command:
        - sh
        - -c
        - cp /bin/busybox /busybox
        image: docker.io/busybox:latest
        name: busybox-copy
        volumeMounts:
        - mountPath: /busybox
          name: busybox
      - command:
        - /busybox/busybox
        - sh
        - -c
        - ONTOLOGY_DIR="/ontology/repository" /ontology/repository/init-load.sh --location
          /data
        image: ghcr.io/oxigraph/oxigraph:0.4.0-alpha.3
        name: oxigraph-load-ontology
        volumeMounts:
        - mountPath: /busybox
          name: busybox
        - mountPath: /ontology
          name: oxigraph-ontology
        - mountPath: /data
          name: oxigraph-data
      volumes:
      - name: oxigraph-data
        persistentVolumeClaim:
          claimName: oxigraph-primary-pvc
      - name: oxigraph-ontology
        persistentVolumeClaim:
          claimName: oxigraph-ontology-pvc
      - emptyDir: {}
        name: busybox
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oxigraph-secondary
  name: oxigraph-secondary
  namespace: deeppharmgraph
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oxigraph-secondary
  template:
    metadata:
      labels:
        app: oxigraph-secondary
    spec:
      containers:
      - args:
        - serve-secondary
        - --primary-location
        - /primary
        - --bind
        - 0.0.0.0:7878
        image: ghcr.io/oxigraph/oxigraph:0.4.0-alpha.3
        name: oxigraph
        ports:
        - containerPort: 7878
        volumeMounts:
        - mountPath: /primary
          name: oxigraph-primary-data
      volumes:
      - name: oxigraph-primary-data
        persistentVolumeClaim:
          claimName: oxigraph-primary-pvc
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: http-datastore
  namespace: deeppharmgraph
spec:
  hostnames:
  - dpg-datastore.forging.cc
  parentRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: http-gateway
    namespace: kube-system
  rules:
  - backendRefs:
    - group: ""
      kind: Service
      name: dpg-datastore-secondary
      port: 80
      weight: 1
    matches:
    - path:
        type: PathPrefix
        value: /
