apiVersion: apps/v1
kind: Deployment
metadata:
  name: oxigraph-primary
  labels:
    app: oxigraph-primary
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: oxigraph-primary
  template:
    metadata:
      labels:
        app: oxigraph-primary
    spec:
      volumes:
        - name: oxigraph-data
          persistentVolumeClaim:
            claimName: oxigraph-primary-pvc
        - name: oxigraph-ontology
          persistentVolumeClaim:
            claimName: oxigraph-ontology-pvc
        - name: busybox
          emptyDir: {}
      initContainers:
        - name: git-ontology
          image: docker.io/bitnami/git
          command:
            - bash
            - -c
            - |
              # Define the remote repository URL, the local directory, and the branch name
              REMOTE_REPO_URL="https://github.com/GreenCappuccino/dpg-datastore-ontology.git"
              LOCAL_DIR="/ontology/repository"
              BRANCH_NAME="forging.cc"

              # Check if the local directory exists
              if [ -d "$LOCAL_DIR" ]; then
                # Move into the local directory
                cd "$LOCAL_DIR"

                # Check if the directory is a git repository
                if git rev-parse --git-dir > /dev/null 2>&1; then
                  # Fetch all branches from the remote repository
                  git fetch --all

                  # Check if the specified branch exists in the remote
                  if git show-ref --verify --quiet refs/remotes/origin/$BRANCH_NAME; then
                    # Forcefully reset the local copy to match the specified remote branch
                    echo "Branch '$BRANCH_NAME' found. Forcefully pulling changes..."
                    git checkout $BRANCH_NAME
                    git reset --hard origin/$BRANCH_NAME
                  else
                    echo "Branch '$BRANCH_NAME' not found in the remote repository."
                    exit 1
                  fi
                else
                  echo "Directory is not a git repository. Removing it and attempting to clone..."
                  cd ..
                  rm -rf "$LOCAL_DIR"
                  git clone --branch $BRANCH_NAME --single-branch --depth 1 "$REMOTE_REPO_URL" "$LOCAL_DIR"
                fi
              else
                # Perform a shallow clone with the specified branch
                echo "Local directory does not exist. Attempting to clone repository..."
                git clone --branch $BRANCH_NAME --single-branch --depth 1 "$REMOTE_REPO_URL" "$LOCAL_DIR"
              fi
          volumeMounts:
            - mountPath: /ontology
              name: oxigraph-ontology
        - name: busybox-copy
          image: docker.io/busybox:latest
          command: ['sh', '-c', 'cp /bin/busybox /busybox']
          volumeMounts:
            - name: busybox
              mountPath: /busybox
        - name: oxigraph-load-ontology
          image: ghcr.io/oxigraph/oxigraph:0.4.0-alpha.3
          command:
            - /busybox/busybox
            - sh
            - -c
            - ONTOLOGY_DIR="/ontology/repository" /ontology/repository/init-load.sh --location /data
          volumeMounts:
            - mountPath: /busybox
              name: busybox
            - mountPath: /ontology
              name: oxigraph-ontology
            - mountPath: /data
              name: oxigraph-data
      containers:
        - name: oxigraph
          image: ghcr.io/oxigraph/oxigraph:0.4.0-alpha.3
          args:
            - serve
            - --location
            - /data
            - --bind
            - 0.0.0.0:7878
          ports:
            - containerPort: 7878
          volumeMounts:
            - mountPath: /data
              name: oxigraph-data
